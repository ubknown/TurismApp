# Database Configuration  
# ✅ FIXED: Using existing database name (turismdb)
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/turismdb}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:Rzvtare112}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# Validation Configuration
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/,file:uploads/
spring.mvc.static-path-pattern=/uploads/**

# Email Configuration
# ✅ SPRING BOOT EMAIL AUTOCONFIGURATION: Spring Boot requires these exact property names
# for JavaMailSender autoconfiguration. Using environment variables here can cause
# configuration issues where Spring Boot doesn't properly initialize the mail sender.
# Direct property values ensure reliable SMTP configuration.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=turismapplic@gmail.com
spring.mail.password=yktw fpad qjrw mzmv
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Email Debug Configuration (set to false in production)
spring.mail.properties.mail.debug=false
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# ✅ JWT Configuration - Environment Variables for Security
jwt.secret=${JWT_SECRET:mySecretKeyForJWTTokenGenerationDiplomaPresentationSecure2025}
jwt.expiration=${JWT_EXPIRATION:86400000}
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

# Logging configuration for email debugging
logging.level.org.springframework.mail=DEBUG
logging.level.com.licentarazu.turismapp.service.EmailService=DEBUG

# For testing: disable email verification (remove this in production)
# app.email.verification.enabled=false

# Application Configuration
app.base-url=http://localhost:8080

# Admin Configuration for Notifications
app.admin.email=turismapplic@gmail.com

# JWT Configuration
# TODO: For production, use a secure random secret and set via environment variables
jwt.secret=${JWT_SECRET:mySecretKeyForJWTTokenGenerationDiplomaPresentationSecure2025}
jwt.expiration=${JWT_EXPIRATION:86400000}
